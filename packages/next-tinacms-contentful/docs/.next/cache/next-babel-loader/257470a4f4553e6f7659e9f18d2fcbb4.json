{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"/Users/christophermacrae/Code/tinalabs/react-tinacms-contentful/packages/docs/pages/[[...slug]].tsx\",\n    _s = $RefreshSig$(),\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { MDXProvider } from '@mdx-js/react';\nimport { CodeBlock } from 'tinacms-doc-toolkit';\nimport { useRouter } from 'next/router';\nimport { Layout, Loader } from 'tinacms-doc-toolkit';\nimport Config from '../tina-demo.config';\nexport var __N_SSG = true;\nexport function SlugHandler() {\n  _s();\n\n  var router = useRouter();\n  var slug = typeof router.query.slug == 'undefined' ? \"/\" : router.query.slug;\n  var currentSlug = Array.isArray(slug) ? slug.join(\"/\") : slug;\n\n  if (router.isFallback) {\n    return __jsx(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(MDXProvider, {\n    components: components,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(Layout, {\n    currentSlug: currentSlug,\n    config: Config,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  })));\n}\n\n_s(SlugHandler, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = SlugHandler;\n\nvar Heading = function Heading(_ref) {\n  var as = _ref.as,\n      text = _ref.text;\n  var H = as || 'h1';\n  var id = typeof text === \"string\" ? text.replace(/[!@#$%^&*()?'`]/gm, '').replace(/[ ]{1,}/gm, '-').toLowerCase() : \"\";\n  return __jsx(H, {\n    id: id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }\n  }, text);\n};\n\n_c2 = Heading;\nvar components = {\n  h1: function h1(_ref2) {\n    var children = _ref2.children;\n    return __jsx(Heading, {\n      as: \"h1\",\n      text: children,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 28\n      }\n    });\n  },\n  h2: function h2(_ref3) {\n    var children = _ref3.children;\n    return __jsx(Heading, {\n      as: \"h2\",\n      text: children,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 28\n      }\n    });\n  },\n  h3: function h3(_ref4) {\n    var children = _ref4.children;\n    return __jsx(Heading, {\n      as: \"h3\",\n      text: children,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 28\n      }\n    });\n  },\n  h4: function h4(_ref5) {\n    var children = _ref5.children;\n    return __jsx(Heading, {\n      as: \"h4\",\n      text: children,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 28\n      }\n    });\n  },\n  pre: function pre(props) {\n    return __jsx(\"pre\", _extends({}, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 12\n      }\n    }));\n  },\n  code: function code(_ref6) {\n    var className = _ref6.className,\n        children = _ref6.children;\n    return __jsx(CodeBlock, {\n      className: [\"code\", className].join(\" \"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 12\n      }\n    }, children);\n  }\n};\nexport default SlugHandler;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SlugHandler\");\n$RefreshReg$(_c2, \"Heading\");","map":{"version":3,"sources":["/Users/christophermacrae/Code/tinalabs/react-tinacms-contentful/packages/docs/pages/[[...slug]].tsx"],"names":["React","MDXProvider","CodeBlock","useRouter","Layout","Loader","Config","SlugHandler","router","slug","query","currentSlug","Array","isArray","join","isFallback","components","Heading","as","text","H","id","replace","toLowerCase","h1","children","h2","h3","h4","pre","props","code","className"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { MDXProvider } from '@mdx-js/react'\nimport {CodeBlock} from 'tinacms-doc-toolkit'\nimport {useRouter} from 'next/router'\nimport { Layout, Loader } from 'tinacms-doc-toolkit'\nimport Config from '../tina-demo.config'\nimport { GetStaticPaths, GetStaticProps } from 'next'\n\nexport function SlugHandler() {\n  const router = useRouter()\n  const slug = typeof router.query.slug == 'undefined' ? \"/\" : router.query.slug \n  const currentSlug = Array.isArray(slug) ? slug.join(\"/\") : slug;\n\n  if (router.isFallback) {\n    return <Loader />\n  }\n\n  return (\n    <MDXProvider components={components}>\n      <Layout currentSlug={currentSlug} config={Config}>\n        <Loader />\n      </Layout>\n    </MDXProvider>\n  )\n}\n\nconst Heading = ({ as, text }) => {\n  const H = as || 'h1'\n  const id = typeof text === \"string\"\n    ? text\n      .replace(/[!@#$%^&*()?'`]/gm, '')\n      .replace(/[ ]{1,}/gm, '-')\n      .toLowerCase()\n    : \"\"\n\n  return <H id={id}>{text}</H>\n}\n\nconst components = {\n  h1: ({children}: any) => <Heading as=\"h1\" text={children} />,\n  h2: ({children}: any) => <Heading as=\"h2\" text={children} />,\n  h3: ({children}: any) => <Heading as=\"h3\" text={children} />,\n  h4: ({children}: any) => <Heading as=\"h4\" text={children} />,\n  pre: (props: any) => {\n    return <pre {...props} />\n  },\n  code: ({className, children}: any) => {\n    return <CodeBlock className={[\"code\", className].join(\" \")}>\n      {children}\n    </CodeBlock>\n  }\n}\n\nexport const getStaticPaths: GetStaticPaths = async () => {\n  const paths = Config.pages.map(page => ({\n    params: {\n      slug: [page.slug.replace(/^\\//, '')]\n    }\n  }))\n\n  return {\n    paths,\n    fallback: false\n  }\n}\n\nexport const getStaticProps: GetStaticProps = async ({params}) => {\n  console.log(params)\n\n  return {\n    props: {}\n  }\n}\n\nexport default SlugHandler;"]},"metadata":{},"sourceType":"module"}