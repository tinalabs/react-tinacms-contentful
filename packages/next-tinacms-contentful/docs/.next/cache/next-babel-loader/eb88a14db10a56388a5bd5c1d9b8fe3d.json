{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/christophermacrae/Code/tinalabs/react-tinacms-contentful/packages/docs/content/1-getting-started.mdx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nexport default function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 10\n    }\n  }), mdx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, \"Getting Started\"), mdx(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }), mdx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, \"Pre-requisites\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, \"This documentation assumes you:\"), mdx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Are comfortable with \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://tinacms.org/docs\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 52\n    }\n  }), \"TinaCMS\")), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Have a working \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://tinacms.org/guides\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 46\n    }\n  }), \"Tina site\"), \" ready to setup with Contentful\"), mdx(\"li\", {\n    parentName: \"ul\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Have a Contentful account and have setup access tokens to your space\")), mdx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, \"Usage\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, \"First add the package to your site, along with the necessary contentful libraries:\"), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 8\n    }\n  }, \"npm install react-tinacms-contentful contentful contentful-management\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, \"Then wrap the CMS with the provider:\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 10\n    }\n  }), \"const cms = new TinaCMS();\\n\\nexport const Cms({children}) {\\n  return (\\n    <TinaProvider cms={cms}>\\n      <ContentfulProvider>\\n        {children}\\n      </ContentfulProvider>\\n    </TinaProvider>\\n  )\\n}\\n\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, \"Then we'll need to configure the CMS to talk to contentful. We'll pull any \\\"secret\\\" values out of environment variables\", mdx(\"sup\", _extends({\n    parentName: \"p\"\n  }, {\n    \"id\": \"fnref-1\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 131\n    }\n  }), mdx(\"a\", _extends({\n    parentName: \"sup\"\n  }, {\n    \"href\": \"#fn-1\",\n    \"className\": \"footnote-ref\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 10\n    }\n  }), \"1\")), \".\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 10\n    }\n  }), \"+ import { ContentfulApiClient } from 'react-tinacms-contentful'\\n+\\n-const cms = new TinaCMS();\\n+const cms = new TinaCMS({\\n+  enabled: false,\\n+  sidebar: true,\\n+  apis: {\\n+    contentful: new ContentfulApiClient({\\n+      spaceId: process.env.CONTENTFUL_SPACE_ID,\\n+      defaultEnvironmentId: process.env.CONTENTFUL_DEFAULT_ENVIRONMENT_ID,\\n+      accessTokens: {\\n+       delivery: process.env.CONTENTFUL_DELIVERY_ACCESS_TOKEN,\\n+       preview: process.env.CONTENTFUL_PREVIEW_ACCESS_TOKEN\\n+      },\\n+      redirectUrl: \\\"/\\\"\\n+    })\\n+  }\\n+});\\n\\nexport const Cms({children}) {\\n  return (\\n    <TinaProvider cms={cms}>\\n      <ContentfulProvider>\\n        {children}\\n      </ContentfulProvider>\\n    </TinaProvider>\\n  )\\n}\\n\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, \"You'll need to create a \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 36\n    }\n  }, \".env\"), \" file to store these \\\"secrets\\\" in the root of the project and fill in the blanks:\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ini\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 10\n    }\n  }), \"CONTENTFUL_SPACE_ID=\\nCONTENTFUL_DEFAULT_ENVIRONMENT_ID=master\\nCONTENTFUL_DELIVERY_ACCESS_TOKEN=\\nCONTENTFUL_PREVIEW_ACCESS_TOKEN=\\n\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, \"Finally, you'll need to setup you'll need to setup your editing route(s) to receive the redirect back from Contentful to finish the login workflow.\\nFor the purposes of this demo, we'll assume it's the root route, or \", mdx(\"inlineCode\", {\n    parentName: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 71\n    }\n  }, \"\\\"/\\\"\")), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 10\n    }\n  }), \"+import { useContentfulAuthRedirect } from 'react-tinacms-contentful'\\n\\nexport const App() {\\n+  useContentfulAuthRedirect()\\n  ...\\n}\\n\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, \"Now you should be able to enable the CMS and login with Contentful, either by:\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 10\n    }\n  }), \"const cms = new TinaCMS({\\n-  enabled: false,\\n+  enabled: true,\\n\")), mdx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, \"or:\"), mdx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-diff\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 10\n    }\n  }), \"+ import { useCallback } from 'react'\\n+ import { useCMS } from 'tina-cms'\\nimport { useContentfulAuthRedirect } from 'react-tinacms-contentful'\\n\\nexport const App() {\\n+  const cms = useCMS()\\n+  const enableCMS = useCallback(() => cms.enable())\\n+\\n  useContentfulAuthRedirect() \\n  ...\\n+    return ( \\n+    ...\\n+      <Button onClick={enableCMS}>Enable CMS\\n+    ...\\n+    )\\n  )\\n}\\n\")), mdx(\"div\", _extends({\n    \"className\": \"footnotes\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }), mdx(\"hr\", {\n    parentName: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }), mdx(\"ol\", {\n    parentName: \"div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, mdx(\"li\", _extends({\n    parentName: \"ol\"\n  }, {\n    \"id\": \"fn-1\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }), \"we store \\\"secrets\\\" in environment variables so they can be changed dynamically at deploy time. This also keeps them out of source code, which can cause problems.\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#fnref-1\",\n    \"className\": \"footnote-backref\"\n  }, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 177\n    }\n  }), \"\\u21A9\")))));\n}\n_c = MDXContent;\n;\nMDXContent.isMDXComponent = true;\n\nvar _c;\n\n$RefreshReg$(_c, \"MDXContent\");","map":{"version":3,"sources":["/Users/christophermacrae/Code/tinalabs/react-tinacms-contentful/packages/docs/content/1-getting-started.mdx"],"names":["React","mdx","layoutProps","MDXLayout","MDXContent","components","props","isMDXComponent"],"mappings":"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","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\n\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`Getting Started`}</h1>\n    <hr></hr>\n    <h2>{`Pre-requisites`}</h2>\n    <p>{`This documentation assumes you:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Are comfortable with `}<a parentName=\"li\" {...{\n          \"href\": \"https://tinacms.org/docs\"\n        }}>{`TinaCMS`}</a></li>\n      <li parentName=\"ul\">{`Have a working `}<a parentName=\"li\" {...{\n          \"href\": \"https://tinacms.org/guides\"\n        }}>{`Tina site`}</a>{` ready to setup with Contentful`}</li>\n      <li parentName=\"ul\">{`Have a Contentful account and have setup access tokens to your space`}</li>\n    </ul>\n    <h2>{`Usage`}</h2>\n    <p>{`First add the package to your site, along with the necessary contentful libraries:`}</p>\n    <p><inlineCode parentName=\"p\">{`npm install react-tinacms-contentful contentful contentful-management`}</inlineCode></p>\n    <p>{`Then wrap the CMS with the provider:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`const cms = new TinaCMS();\n\nexport const Cms({children}) {\n  return (\n    <TinaProvider cms={cms}>\n      <ContentfulProvider>\n        {children}\n      </ContentfulProvider>\n    </TinaProvider>\n  )\n}\n`}</code></pre>\n    <p>{`Then we'll need to configure the CMS to talk to contentful. We'll pull any \"secret\" values out of environment variables`}<sup parentName=\"p\" {...{\n        \"id\": \"fnref-1\"\n      }}><a parentName=\"sup\" {...{\n          \"href\": \"#fn-1\",\n          \"className\": \"footnote-ref\"\n        }}>{`1`}</a></sup>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`+ import { ContentfulApiClient } from 'react-tinacms-contentful'\n+\n-const cms = new TinaCMS();\n+const cms = new TinaCMS({\n+  enabled: false,\n+  sidebar: true,\n+  apis: {\n+    contentful: new ContentfulApiClient({\n+      spaceId: process.env.CONTENTFUL_SPACE_ID,\n+      defaultEnvironmentId: process.env.CONTENTFUL_DEFAULT_ENVIRONMENT_ID,\n+      accessTokens: {\n+       delivery: process.env.CONTENTFUL_DELIVERY_ACCESS_TOKEN,\n+       preview: process.env.CONTENTFUL_PREVIEW_ACCESS_TOKEN\n+      },\n+      redirectUrl: \"/\"\n+    })\n+  }\n+});\n\nexport const Cms({children}) {\n  return (\n    <TinaProvider cms={cms}>\n      <ContentfulProvider>\n        {children}\n      </ContentfulProvider>\n    </TinaProvider>\n  )\n}\n`}</code></pre>\n    <p>{`You'll need to create a `}<inlineCode parentName=\"p\">{`.env`}</inlineCode>{` file to store these \"secrets\" in the root of the project and fill in the blanks:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ini\"\n      }}>{`CONTENTFUL_SPACE_ID=\nCONTENTFUL_DEFAULT_ENVIRONMENT_ID=master\nCONTENTFUL_DELIVERY_ACCESS_TOKEN=\nCONTENTFUL_PREVIEW_ACCESS_TOKEN=\n`}</code></pre>\n    <p>{`Finally, you'll need to setup you'll need to setup your editing route(s) to receive the redirect back from Contentful to finish the login workflow.\nFor the purposes of this demo, we'll assume it's the root route, or `}<inlineCode parentName=\"p\">{`\"/\"`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`+import { useContentfulAuthRedirect } from 'react-tinacms-contentful'\n\nexport const App() {\n+  useContentfulAuthRedirect()\n  ...\n}\n`}</code></pre>\n    <p>{`Now you should be able to enable the CMS and login with Contentful, either by:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`const cms = new TinaCMS({\n-  enabled: false,\n+  enabled: true,\n`}</code></pre>\n    <p>{`or:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`+ import { useCallback } from 'react'\n+ import { useCMS } from 'tina-cms'\nimport { useContentfulAuthRedirect } from 'react-tinacms-contentful'\n\nexport const App() {\n+  const cms = useCMS()\n+  const enableCMS = useCallback(() => cms.enable())\n+\n  useContentfulAuthRedirect() \n  ...\n+    return ( \n+    ...\n+      <Button onClick={enableCMS}>Enable CMS\n+    ...\n+    )\n  )\n}\n`}</code></pre>\n    <div {...{\n      \"className\": \"footnotes\"\n    }}>\n      <hr parentName=\"div\"></hr>\n      <ol parentName=\"div\">\n        <li parentName=\"ol\" {...{\n          \"id\": \"fn-1\"\n        }}>{`we store \"secrets\" in environment variables so they can be changed dynamically at deploy time. This also keeps them out of source code, which can cause problems.`}<a parentName=\"li\" {...{\n            \"href\": \"#fnref-1\",\n            \"className\": \"footnote-backref\"\n          }}>{`↩`}</a></li>\n      </ol>\n    </div>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"]},"metadata":{},"sourceType":"module"}