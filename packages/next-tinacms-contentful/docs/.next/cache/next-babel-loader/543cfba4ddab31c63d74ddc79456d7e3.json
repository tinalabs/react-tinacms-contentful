{"ast":null,"code":"var _jsxFileName = \"/Users/christophermacrae/Code/tinalabs/react-tinacms-contentful/packages/docs/pages/[[...slug]].tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { MDXProvider } from '@mdx-js/react';\nimport { CodeBlock } from 'tinacms-doc-toolkit';\nimport { useRouter } from 'next/router';\nimport { Layout, Loader } from 'tinacms-doc-toolkit';\nimport Config from '../tina-demo.config';\nexport function SlugHandler() {\n  const router = useRouter();\n  const slug = typeof router.query.slug == 'undefined' ? \"/\" : router.query.slug;\n  const currentSlug = Array.isArray(slug) ? slug.join(\"/\") : slug;\n\n  if (router.isFallback) {\n    return __jsx(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(MDXProvider, {\n    components: components,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(Layout, {\n    currentSlug: currentSlug,\n    config: Config,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  })));\n}\n\nconst Heading = ({\n  as,\n  text\n}) => {\n  const H = as || 'h1';\n  const id = text.replace(' ', '-').replace(/!@#$%^&*()/, '').toLowerCase();\n  return __jsx(H, {\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }\n  }, text);\n};\n\nconst components = {\n  h1: ({\n    children\n  }) => __jsx(Heading, {\n    as: \"h1\",\n    text: children,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 28\n    }\n  }),\n  h2: ({\n    children\n  }) => __jsx(Heading, {\n    as: \"h2\",\n    text: children,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 28\n    }\n  }),\n  h3: ({\n    children\n  }) => __jsx(Heading, {\n    as: \"h3\",\n    text: children,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 28\n    }\n  }),\n  h4: ({\n    children\n  }) => __jsx(Heading, {\n    as: \"h4\",\n    text: children,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 28\n    }\n  }),\n  pre: props => {\n    return __jsx(\"pre\", _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 12\n      }\n    }));\n  },\n  code: ({\n    className,\n    children\n  }) => {\n    return __jsx(CodeBlock, {\n      className: [\"code\", className].join(\" \"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 12\n      }\n    }, children);\n  }\n};\nexport const getStaticPaths = async () => {\n  const paths = Config.pages.map(page => ({\n    params: {\n      slug: [page.slug.replace(/^\\//, '')]\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n};\nexport const getStaticProps = async ({\n  params\n}) => {\n  console.log(params);\n  return {\n    props: {}\n  };\n};\nexport default SlugHandler;","map":{"version":3,"sources":["/Users/christophermacrae/Code/tinalabs/react-tinacms-contentful/packages/docs/pages/[[...slug]].tsx"],"names":["React","MDXProvider","CodeBlock","useRouter","Layout","Loader","Config","SlugHandler","router","slug","query","currentSlug","Array","isArray","join","isFallback","components","Heading","as","text","H","id","replace","toLowerCase","h1","children","h2","h3","h4","pre","props","code","className","getStaticPaths","paths","pages","map","page","params","fallback","getStaticProps","console","log"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { MDXProvider } from '@mdx-js/react'\nimport {CodeBlock} from 'tinacms-doc-toolkit'\nimport {useRouter} from 'next/router'\nimport { Layout, Loader } from 'tinacms-doc-toolkit'\nimport Config from '../tina-demo.config'\nimport { GetStaticPaths, GetStaticProps } from 'next'\n\nexport function SlugHandler() {\n  const router = useRouter()\n  const slug = typeof router.query.slug == 'undefined' ? \"/\" : router.query.slug \n  const currentSlug = Array.isArray(slug) ? slug.join(\"/\") : slug;\n\n  if (router.isFallback) {\n    return <Loader />\n  }\n\n  return (\n    <MDXProvider components={components}>\n      <Layout currentSlug={currentSlug} config={Config}>\n        <Loader />\n      </Layout>\n    </MDXProvider>\n  )\n}\n\nconst Heading = ({ as, text }) => {\n  const H = as || 'h1'\n  const id = text\n    .replace(' ', '-')\n    .replace(/!@#$%^&*()/, '')\n    .toLowerCase()\n\n  return <H id={id}>{text}</H>\n}\n\nconst components = {\n  h1: ({children}: any) => <Heading as=\"h1\" text={children} />,\n  h2: ({children}: any) => <Heading as=\"h2\" text={children} />,\n  h3: ({children}: any) => <Heading as=\"h3\" text={children} />,\n  h4: ({children}: any) => <Heading as=\"h4\" text={children} />,\n  pre: (props: any) => {\n    return <pre {...props} />\n  },\n  code: ({className, children}: any) => {\n    return <CodeBlock className={[\"code\", className].join(\" \")}>\n      {children}\n    </CodeBlock>\n  }\n}\n\nexport const getStaticPaths: GetStaticPaths = async () => {\n  const paths = Config.pages.map(page => ({\n    params: {\n      slug: [page.slug.replace(/^\\//, '')]\n    }\n  }))\n\n  return {\n    paths,\n    fallback: false\n  }\n}\n\nexport const getStaticProps: GetStaticProps = async ({params}) => {\n  console.log(params)\n\n  return {\n    props: {}\n  }\n}\n\nexport default SlugHandler;"]},"metadata":{},"sourceType":"module"}