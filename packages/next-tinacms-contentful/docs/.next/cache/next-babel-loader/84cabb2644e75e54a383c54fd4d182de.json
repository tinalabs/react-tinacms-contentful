{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nconst layoutProps = {};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, `Editing Entries`), mdx(\"p\", null, `In this guide, we'll cover how to edit entries with `, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, `react-tinacms-contentful`), `.`), mdx(\"h2\", null, `Editing A Single Entry`), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, `explain useContentfulEntryForm and usePlugin`), mdx(\"li\", {\n    parentName: \"ul\"\n  }, `explain useContentfulEntry with useForm and usePlugin`)), mdx(\"h3\", null, `FAQs`), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, `What happens on write?`), mdx(\"li\", {\n    parentName: \"ul\"\n  }, `What happens to references?`)), mdx(\"h2\", null, `Editing Nested & Referenced Entries`), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, `explain useContentfulEntryForm with { references: true }`), mdx(\"li\", {\n    parentName: \"ul\"\n  }, `explain cms.api.updateEntry`), mdx(\"li\", {\n    parentName: \"ul\"\n  }, `expain cms.api.updateEntries`)), mdx(\"h3\", null, `FAQs`), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, `What happens on write?`), mdx(\"li\", {\n    parentName: \"ul\"\n  }, `What happens to references?`)));\n}\n;\nMDXContent.isMDXComponent = true;","map":null,"metadata":{},"sourceType":"module"}