{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { MDXProvider } from '@mdx-js/react';\nimport { useRouter } from 'next/router';\nimport { Layout, Loader } from 'tinacms-doc-toolkit';\nimport Config from '../tina-demo.config';\nexport function SlugHandler() {\n  const router = useRouter();\n  const slug = typeof router.query.slug == 'undefined' ? \"/\" : router.query.slug;\n  const currentSlug = Array.isArray(slug) ? slug.join(\"/\") : slug;\n\n  if (router.isFallback) {\n    return __jsx(Loader, null);\n  }\n\n  return __jsx(MDXProvider, {\n    components: components\n  }, __jsx(Layout, {\n    currentSlug: currentSlug,\n    config: Config\n  }, __jsx(Loader, null)));\n}\nconst components = {\n  pre: props => {\n    return __jsx(\"pre\", props);\n  },\n  code: props => {\n    return __jsx(\"code\", props);\n  }\n};\nexport const getStaticPaths = async () => {\n  const paths = Config.pages.map(page => ({\n    params: {\n      slug: [page.slug.replace(/^\\//, '')]\n    }\n  }));\n  console.log(paths);\n  return {\n    paths,\n    fallback: false\n  };\n};\nexport const getStaticProps = async ({\n  params\n}) => {\n  console.log(params);\n  return {\n    props: {}\n  };\n};\nexport default SlugHandler;","map":null,"metadata":{},"sourceType":"module"}