{"ast":null,"code":"var _jsxFileName = \"/Users/christophermacrae/Code/tinalabs/react-tinacms-contentful/packages/docs/pages/[[...slug]].tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { MDXProvider } from '@mdx-js/react';\nimport { CodeBlock } from 'tinacms-doc-toolkit';\nimport { useRouter } from 'next/router';\nimport { Layout, Loader } from 'tinacms-doc-toolkit';\nimport Config from '../tina-demo.config';\nexport function SlugHandler() {\n  const router = useRouter();\n  const slug = typeof router.query.slug == 'undefined' ? \"/\" : router.query.slug;\n  const currentSlug = Array.isArray(slug) ? slug.join(\"/\") : slug;\n\n  if (router.isFallback) {\n    return __jsx(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return __jsx(MDXProvider, {\n    components: components,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(Layout, {\n    currentSlug: currentSlug,\n    config: Config,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  })));\n}\nconst components = {\n  pre: props => {\n    return __jsx(\"div\", _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 16\n      }\n    }));\n  },\n  code: CodeBlock\n};\nexport const getStaticPaths = async () => {\n  const paths = Config.pages.map(page => ({\n    params: {\n      slug: [page.slug.replace(/^\\//, '')]\n    }\n  }));\n  console.log(paths);\n  return {\n    paths,\n    fallback: false\n  };\n};\nexport const getStaticProps = async ({\n  params\n}) => {\n  console.log(params);\n  return {\n    props: {}\n  };\n};\nexport default SlugHandler;","map":{"version":3,"sources":["/Users/christophermacrae/Code/tinalabs/react-tinacms-contentful/packages/docs/pages/[[...slug]].tsx"],"names":["React","MDXProvider","CodeBlock","useRouter","Layout","Loader","Config","SlugHandler","router","slug","query","currentSlug","Array","isArray","join","isFallback","components","pre","props","code","getStaticPaths","paths","pages","map","page","params","replace","console","log","fallback","getStaticProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAAQC,SAAR,QAAwB,qBAAxB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,qBAA/B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAIA,OAAO,SAASC,WAAT,GAAuB;AAC5B,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AACA,QAAMM,IAAI,GAAG,OAAOD,MAAM,CAACE,KAAP,CAAaD,IAApB,IAA4B,WAA5B,GAA0C,GAA1C,GAAgDD,MAAM,CAACE,KAAP,CAAaD,IAA1E;AACA,QAAME,WAAW,GAAGC,KAAK,CAACC,OAAN,CAAcJ,IAAd,IAAsBA,IAAI,CAACK,IAAL,CAAU,GAAV,CAAtB,GAAuCL,IAA3D;;AAEA,MAAID,MAAM,CAACO,UAAX,EAAuB;AACrB,WAAO,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SACE,MAAC,WAAD;AAAa,IAAA,UAAU,EAAEC,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,WAAW,EAAEL,WAArB;AAAkC,IAAA,MAAM,EAAEL,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD;AAGD,MAAMU,UAAU,GAAG;AACjBC,EAAAA,GAAG,EAAGC,KAAD,IAAgB;AACf,WAAO,0BAASA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACH,GAHc;AAIjBC,EAAAA,IAAI,EAAEjB;AAJW,CAAnB;AAOA,OAAO,MAAMkB,cAA8B,GAAG,YAAY;AACxD,QAAMC,KAAK,GAAGf,MAAM,CAACgB,KAAP,CAAaC,GAAb,CAAiBC,IAAI,KAAK;AACtCC,IAAAA,MAAM,EAAE;AACNhB,MAAAA,IAAI,EAAE,CAACe,IAAI,CAACf,IAAL,CAAUiB,OAAV,CAAkB,KAAlB,EAAyB,EAAzB,CAAD;AADA;AAD8B,GAAL,CAArB,CAAd;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AAEA,SAAO;AACLA,IAAAA,KADK;AAELQ,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID,CAbM;AAeP,OAAO,MAAMC,cAA8B,GAAG,OAAO;AAACL,EAAAA;AAAD,CAAP,KAAoB;AAChEE,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AAEA,SAAO;AACLP,IAAAA,KAAK,EAAE;AADF,GAAP;AAGD,CANM;AAUP,eAAeX,WAAf","sourcesContent":["import React from 'react'\nimport { MDXProvider } from '@mdx-js/react'\nimport {CodeBlock} from 'tinacms-doc-toolkit'\nimport {useRouter} from 'next/router'\nimport { Layout, Loader } from 'tinacms-doc-toolkit'\nimport Config from '../tina-demo.config'\nimport { GetStaticPaths, GetStaticProps } from 'next'\n\n\nexport function SlugHandler() {\n  const router = useRouter()\n  const slug = typeof router.query.slug == 'undefined' ? \"/\" : router.query.slug \n  const currentSlug = Array.isArray(slug) ? slug.join(\"/\") : slug;\n\n  if (router.isFallback) {\n    return <Loader />\n  }\n\n  return (\n    <MDXProvider components={components}>\n      <Layout currentSlug={currentSlug} config={Config}>\n        <Loader />\n      </Layout>\n    </MDXProvider>\n  )\n}\n\n\nconst components = {\n  pre: (props: any) => {\n        return <div {...props} />;\n    },\n  code: CodeBlock\n}\n\nexport const getStaticPaths: GetStaticPaths = async () => {\n  const paths = Config.pages.map(page => ({\n    params: {\n      slug: [page.slug.replace(/^\\//, '')]\n    }\n  }))\n\n  console.log(paths)\n\n  return {\n    paths,\n    fallback: false\n  }\n}\n\nexport const getStaticProps: GetStaticProps = async ({params}) => {\n  console.log(params)\n\n  return {\n    props: {}\n  }\n}\n\n\n\nexport default SlugHandler;"]},"metadata":{},"sourceType":"module"}