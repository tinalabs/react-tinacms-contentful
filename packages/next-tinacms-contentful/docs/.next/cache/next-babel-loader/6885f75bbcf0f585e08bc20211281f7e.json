{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nexport default function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Using Contentful in TinaCMS Plugins\"), mdx(\"hr\", null), mdx(\"p\", null, \"To use Contentful in \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://tina.io/docs/plugins/\"\n  }), \"TinaCMS plugins\"), \", you can either use the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#cms-api\"\n  }), mdx(\"inlineCode\", {\n    parentName: \"a\"\n  }, \"cms.api\")), \" object, or the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#react-utility-hooks\"\n  }), \"react utility hooks\"), \".\"), mdx(\"h2\", null, \"CMS API\"), mdx(\"p\", null, \"Inside various plugins types you will be given access to the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cms\"), \" object. You can access the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ContentfulAPIClient\"), \" from this. For example, in a \", \"[content creator plugin]\", \")():\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"const PostCreatorPlugin = {\\n  __type: 'content-creator',\\n  fields: [\\n    { name: \\\"fields.title\\\", label: \\\"Title\\\", component: \\\"text\\\" }\\n  ],\\n  onSubmit: aysnc(values, cms) {\\n    try {\\n      await cms.api.contentful.createEntry(values.fields)\\n\\n      cms.alerts.success(\\\"Created entry\\\")\\n    }\\n    catch (error) {\\n      cms.alerts.error(error.message)\\n    }\\n\")), mdx(\"h2\", null, \"React Utility Hooks\"), mdx(\"p\", null, \"There are a variety of React utility hooks for interacting with Contentful:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"useContentful\"), \": returns the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ContentfulAPIClient\"), \" instance\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"useContentfulDelivery\"), \": returns an instance of the Contentful JS SDK to retreive drafts from the delivery API.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"useContentfulPreview\"), \": returns an instance of the Contentful JS SDK to retreive drafts from the preview API.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"useContentfulPreview\"), \": returns an instance of the Contentful JS SDK to retreive drafts from the preview API.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"useContentfulManagement\"), \": returns an instance of the Contentful Management API for the current logged in Contentful user.\", mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Note:\"), \" do not use this in contexts where the CMS is not enabled and a user is not logged in.\")))));\n}\n;\nMDXContent.isMDXComponent = true;","map":null,"metadata":{},"sourceType":"module"}